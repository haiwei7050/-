1. typescript 和 webpack 对 js模块的处理

   1) typescript 对 js模块的处理
      
      1.1) 统一了js模块的 import/export的语法
      1.2) 通过设定 --module参数, 将typescript模块语法转换为对应的模块语法
           
	   npx tsc --module AMD a.ts b.ts // 将a.ts和b.ts使用的import/export的语法
	                                  // 转换成AMD使用的import/export的语法

      1.3) typescript 只负责转换 import/export语法, 不负责怎么让浏览器加载模块
           这个时候我们需要使用webpack
   
   2) webpack 对 js模块的处理
     
      2.1)webpack 会把 将所有js的内容写到一个js中去.

      2.2)如果项目使用的是commonjs模块语法,则所有
          module.exports和require方法都会替换成webpack实现的方法.

      2.3)如果项目使用的是es6模块语法,则所有
          export/import都会替换成webpack实现的方法.

	         
         

备注:
  1. 各种js的模块语法
  
      // js 模块语法  commonjs
         
	 ** export **
	 module.exports.hi = function (){}

         ** import **
	 const mylib = require('mylib');
	 mylib.hi();
      


      // js 模块语法  AMD

	 ** export **
	 function hi(){}
	 
	 define({hi:hi})

         ** import **
	 require(['mylib'], function (mylib) {
           mylib.hi();
         });
         


      // js 模块语法  ES6

	 ** export **
	 export function hi(){}

         ** import **
	 import {hi} from './mylib'
	 hi();

   

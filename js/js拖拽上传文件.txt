1. 实现代码

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>上传文件夹</title>
        <style>
            div.box {
                border: 2px dashed red;
                height: 200px;
                line-height: 200px;
                width: 500px;
                text-align: center;
            }
        </style>
    </head>
    <body>
        <div id="uploadBox" class="box">
            请将文件拖到这里上传
        </div>
        <script>
            const uploadBox = document.getElementById('uploadBox');
            uploadBox.addEventListener('dragover', e => e.preventDefault());
            uploadBox.addEventListener('drop', upload);

            function upload(e) {
                e.preventDefault();
                let fileToUpload;
                if (!e.dataTransfer.files || !(fileToUpload = e.dataTransfer.files[0]))
                    return;
                const formToUpload = new FormData();
                formToUpload.append("file", fileToUpload);
                const xhr = new XMLHttpRequest();
                xhr.open("POST", "http://192.30.0.231:8080/upload2");
                xhr.onreadystatechange = () => {
                    if (xhr.readyState == 4 && xhr.status == 200) {
                        console.log(xhr.responseText);
                    }
                };
                xhr.send(formToUpload);
            }
        </script>
    </body>
</html>

注意的点
  1) 假如我们想在div上触发drop事件(即放下拖拽的文件), 则必须
     1.1) 一定要在dragover事件监听函数中调用e.preventDefault()
             否则不触发drop事件

           div.addEventListener('dragover', function (e) {
                e.preventDefault();
            });
	      
     1.2) 一定要在drop事件监听函数中调用e.preventDefault()
             否则浏览器默认会打开拖拽进来的文件

            div.addEventListener('drop', function (e) {
                console.log('drop');
                e.preventDefault();
            })

 2) XMLHttpRequest.send(File) 和 XMLHttpRequest.send(FormData)的区别
    
    2.1) XMLHttpRequest.send(File)不会用 multipart/form-data 上传文件,
         而是读取文件内容,然后直接发送.

    2.2) XMLHttpRequest.send(FormData)会采用 multipart/form-data 上传文件


 

2. 文件上传的input详解

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>上传文件的input</title>
    </head>
    <body>
        <input id="uf" type="file"><br>
        <script>
            const uf = document.getElementById('uf');
            const btn = document.getElementById('btn');
            uf.addEventListener('input', e => {
                console.log(`input value: ${e.target.value}`);
                console.log(`input files:${e.target.files[0]}`)
            })
        </script>
    </body>
</html>

选择文件后:
           1) uf的value会变成文件的路径
           2) input事件会在value改变之后触发
           3) 被选中的文件会存放在input.files属性中
           4) input.files 是FileList类型
           5) input.files[0] 是被选中的文件

参考链接: input事件     https://wangdoc.com/javascript/events/form.html#input-%E4%BA%8B%E4%BB%B6
          File,FileList https://wangdoc.com/javascript/bom/file.html








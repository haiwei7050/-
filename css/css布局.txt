1. 元素显示模式
  1) 块元素, display:block
     特点: 独占1行, 可以设置 width, height, line-height...
     常见元素: <h1>至<h6>, <p>, <div> <ul> <li>
     注意点: 1) 默认width属性等于100%, 即如果不设置宽度, 默认等于父盒子的宽度
            2) <h1>至<h6>以及<p>标签内不能再放其它块级元素

  2) 行内元素, display:inline
     特点: 并行显示, 不能设置 width, height等属性...
     常见元素: <a>, <strong>, <span>
     注意点: 1) 默认width等于内容的宽度
            2) 可以设置padding和margin
                padding     内容到边框的间距
                margin      边框到其他元素的间距

  3) 行内块元素, display:inline-block
     特点: 并行显示, 可以设置 width, height, line-height...
     常见元素:  <img>, <input>, <td>
     注意点: 1) 默认width等于内容的宽度
            2) 并行显示, 但是彼此有一点空隙

2. line-height
   div {
      font-size: 16px;
      height: 34px;
      line-height: 34px;
   }
   <div>字</div>
   1) line-height = 字体高度 + 上部留白 + 下部留白
   2) 上下留白的高度总想等
   3) 要想字体在垂直位置居中, 就需要
      字体高度 + 上下留白 = height
      即 line-height = height
      
   4)证明 当字体居中时, 
       1/2盒子高度 - 1/2字体高度 = 上留白(或下留白)的高度
    => 1/2盒子高度 = 1/2字体高度 + 上留白(或下留白)的高度
    => 盒子高度 = 字体高度 + 2*上留白高度 = line-height

3. padding 和 margin
   1)padding指的是, 盒子边框到内容之间的距离
   2) margin是盒子的外边距, 从盒子边框外开始算

4. 块级元素居中
  1) 必须是块级元素 display:block, 
     display:inline-block也不行
     
  2) 必须设置width,
     如果不设置width, 即width=100%, 也就是父盒子的宽度, 就没必要居中了, 因为已经占满父盒子了
     
  3) 设置margin为
     .box {
        display: block,
        widht: 960px,
        margin: 0 auto;
     }

5. margin 塌陷
   .p {
      width: 400px;
      height: 400px;
      background-color: black;
   }
   .s1 {
       height: 200px;
       background-color: red;

   }
   .s2 {
       height 100px;
       background-color: yellow;
   }
    <div class="p">
        <div class="s1"></div>
        <div class="s2"></div>
    </div>

    1) 如果同时设置 .p 和 .s1的margin-top,
       最终表现就是只设置了.p的margin-top,
       并且其值等于二者最大的一个.
       解决方法是在.p 中设置 overflow: hidden
       
    2) 但是同时设置 .p 和 .s2的margin-top,
       就不会出现margin塌陷的问题

 6. padding什么时候不撑大盒子宽度
    1) 不要同时设置 wdith  和 padding-left (或者padding-right)
    2) 不要同时设置 height 和 padding-top  (或者padding-buttom)
    

7. float元素的特性
    1) display类似inline-block (行内块元素)
       !!! 注意inline-block之间会有间隙, float后的元素没有 !!!
    
    2) width默认等于内容的宽度
    
    3) 如果浮动元素前面有一个不浮动的块元素, 它只会在本行浮动，不会浮动到上一行
       因为前面的块元素会独占一行.
       结论: float只会对后面的元素产生影响
       <div class="box">
           <div class="ctn1">1</div>
           <div class="ctn2">2</div>
           <div class="ctn3">3</div>
       </div>
       如果 .ctn1不浮动而.ctn2浮动
       则.ctn2不会浮动到.ctn1上面
       它只会压住.ctn3

8. background-position
   1) background-position: x, y
      x和y都是图像左上角相对与标签的左上角
   2) background-position: 10px, 0
         表示把图像向 右=> 平移10px
      background-position: -10px, 0
         表示把图像向 左<= 平移10px
   3) background-position: 0, 10px
        表示把图像向 下 平移10px
      background-position: 0, -10px
        表示把图像向 上 平移10px

注意, 如果 background-position: 10px, 0 和 background-position: -10px, 0 显示一样, 那是忘了设置background-repeat:none

9. 多class的覆盖关系
   <div class="red green"></div>
   1)如果red在green之后, 则显示red, 因为red层叠掉green
      .green {background-color: green}
      .red {background-color: red}